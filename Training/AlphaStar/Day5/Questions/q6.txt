Milk Visits

Farmer John is planning to build 𝑁 (1≤𝑁≤10^5) farms that will be connected by 𝑁−1 roads, forming a tree 
(i.e., all farms are reachable from each-other, and there are no cycles). Each farm contains a cow with an 
integer type 𝑇𝑖 between 1 and 𝑁 inclusive. Farmer John's 𝑀 friends (1≤𝑀≤10^5) often come to visit him. 
During a visit with friend 𝑖, Farmer John will walk with his friend along the unique path of roads from 
farm 𝐴𝑖 to farm 𝐵𝑖 (it may be the case that 𝐴𝑖=𝐵𝑖). Additionally, they can try some milk from any cow along 
the path they walk. Since most of Farmer John's friends are also farmers, they have very strong preferences 
regarding milk. Each of his friends will only drink milk from a certain type of cow. Any of Farmer John's 
friends will only be happy if they can drink their preferred type of milk during their visit.

Please determine whether each friend will be happy after visiting.

SCORING:
Test case 2 is the second example case below.
Test case 3 satisfies 𝑁≤10^3,𝑀≤2⋅10^3.
Test cases 4-7 satisfy 𝐶𝑖≤10 (𝐶𝑖 defined below).

INPUT FORMAT:
The first line contains two integer 𝑁 and 𝑀.

The second line contains 𝑁 space-separated integers 𝑇1,𝑇2,…,𝑇𝑁. The type of the cow in the 𝑖-th farm is 
denoted by 𝑇𝑖. The next 𝑁−1 lines each contain two distinct integers 𝑋 and 𝑌 (1≤𝑋,𝑌≤𝑁), indicating that 
there is an edge between farms 𝑋 and 𝑌.

The next 𝑀 lines contain integers 𝐴𝑖, 𝐵𝑖, and 𝐶𝑖. 𝐴𝑖 and 𝐵𝑖 represent the endpoints of the path walked 
during friend 𝑖's visit, while 𝐶𝑖 (1≤𝐶𝑖≤𝑁) indicates the type of cow whose milk the friend enjoys drinking.

OUTPUT FORMAT:
Print a binary string of length 𝑀. The 𝑖th character of the string should be '1' if the 𝑖th friend will be
happy, or '0' otherwise.

SAMPLE INPUT:
5 5
1 1 2 1 2
1 2
2 3
2 4
1 5
1 4 1
1 4 2
1 3 2
1 3 1
5 5 1

SAMPLE OUTPUT:
10110

In this example, the path from 1 and 4 involves farms 1, 2, and 4. All of these contain cows of type 1, so
the first friend will be satisfied while the second one will not.

SAMPLE INPUT:
6 4
1 2 3 3 3 3
1 2
2 3
3 4
2 5
5 6
4 6 1
4 6 2
4 6 3
4 6 4

SAMPLE OUTPUT:
0110

Problem credits: Spencer Compton